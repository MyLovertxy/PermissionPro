<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wuyong.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.wuyong.domain.Employee" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="inputtime" property="inputtime" jdbcType="TIMESTAMP" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="admin" property="admin" jdbcType="BIT" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <association property="department" javaType="com.wuyong.domain.Department" columnPrefix="d_">
    <result property="id" column="id"/>
    <result property="name" column="name"/>
  </association>

  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <!--  /*打破与角色之间的关系*/-->
  <delete id="deleteRoleRel">
    delete from employee_role_rel where eid=#{id}
  </delete>

  <insert id="insert" parameterType="com.wuyong.domain.Employee" useGeneratedKeys="true" keyProperty="id">
    insert into employee (id, username, inputtime, 
      tel, email, state, admin, 
      dep_id, password)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{inputtime,jdbcType=TIMESTAMP}, 
      #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{state,jdbcType=BIT}, #{admin,jdbcType=BIT}, 
      #{department.id,jdbcType=BIGINT}, #{password,jdbcType=VARCHAR})
  </insert>
<!--/*保存角色  员工关系*/  insertEmployeeAndRoleRel-->
  <insert id="insertEmployeeAndRoleRel">
    insert into employee_role_rel (eid,rid) values (#{id},#{rid})
  </insert>



  <update id="updateByPrimaryKey" parameterType="com.wuyong.domain.Employee" >
    update employee
    set username = #{username,jdbcType=VARCHAR},
      inputtime = #{inputtime,jdbcType=TIMESTAMP},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      admin = #{admin,jdbcType=BIT},
      dep_id = #{department.id,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!--设置员工的离职状态-->
  <update id="updateState">
    update employee set state=false where id=#{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, username, inputtime, tel, email, state, admin, dep_id, password
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>
  <sql id="where_sql">
      <if test="keyword !=null and keyword !=''">
        and (e.username like concat('%',#{keyword},'%')
        or e.tel like concat('%',#{keyword},'%')
        or e.email like concat('%',#{keyword},'%'))
      </if>

  </sql>
  <!--员工关联部门查询-->
  <select id="selectAll" resultMap="BaseResultMap" >
    select e.id, e.username, e.inputtime, e.tel, e.email, e.state, e.admin, e.password,d.id as d_id,d.name as d_name
    from employee as e left join department as d on e.dep_id=d.id where 1=1 and
    <choose>
      <when test="departure==true">
        e.state =false
      </when>
      <otherwise>
        1=1
      </otherwise>
    </choose>
    <include refid="where_sql"/>
    order by e.id
  </select>

<!--    /*到数据库查询有没有当前用户*/-->
    <select id="getEmployeeWithUserName" resultType="com.wuyong.domain.Employee">
        select * from employee where username=#{username}
    </select>

<!--  /*根据用户的id来查询角色编号的名称*/-->
  <select id="getRoleById" resultType="java.lang.String">
        SELECT r.rnum from employee_role_rel as er
        LEFT JOIN role as r
        on er.rid=r.rid
        WHERE eid=#{id}
  </select>

<!--  /*根据用户的id查询权限 资源名称*/-->
  <select id="getPermissionById" resultType="java.lang.String">
        SELECT DISTINCT p.presource from role_permission_rel rp
        LEFT JOIN permission p
        ON rp.pid=p.pid
        WHERE rid in (SELECT rid FROM employee_role_rel WHERE eid=#{id})
  </select>


</mapper>